@using Newtonsoft.Json;
@using PagedList.Core.Mvc
@using System.Text;
@using BookStore.Extention;
@model PagedList.Core.IPagedList<BookStore.Models.Order>

@{

    int CurrentPage = ViewBag.CurrentPage != null ? (int)ViewBag.CurrentPage : 1;
    ViewData["Title"] = "List payments" + CurrentPage;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Trang chủ</a>
            <span class="breadcrumb-item active">Danh sách đơn hàng : trang @CurrentPage</span>
        </nav>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="row m-b-30">
            <div class="col-lg-8">
                <a class="btn btn-primary" asp-area="Admin" asp-controller="AdminOrders" asp-action="Create"><i class="anticon anticon-plus-circle m-r-5"></i><span>Thêm danh mục</span></a>
            </div>
            <div class="col-lg-4 text-right">

            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover e-commerce-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Đơn hàng</th>
                        <th>Ngày mua</th>
                        <th>Thông tin thanh toán</th>
                        <th>Thanh toán</th>
                        <th>Thông tin hàng hóa</th>
                        <th>Tổng tiền</th>
                        <th>Trạng thái</th>
                        <th>#</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {

        <tr>
            <td>@item.OrderId</td>
            <td>@item.Customer.FullName</td>
            <td>@item.OrderDate</td>
            <td>@item.DesPayment</td>
            <td>@(item.Paid ? "Đã thanh toán" : "Chưa thanh toán")</td>
            <td>@(item.Deleted ? "Đơn hàng đã bị hủy" : "Đơn hàng đã sử lý")</td>

            <td>@item.TotalMoney.ToString("#,##0") VNĐ</td>
            <td>@item.TransactStatus.Status</td>



            <td>
                <a class="btn btn-primary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminOrders" asp-action="Details" asp-route-id="@item.OrderId">Chi tiết</a>
                 <a data-target="#modal-header" data-toggle="modal" class="btn btn-secondary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminOrders" asp-action="ChangeStatus" asp-route-id="@item.OrderId">Cập nhật trạng thái</a>
                <a class="btn btn-secondary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminOrders" asp-action="Edit" asp-route-id="@item.OrderId">Chỉnh sửa</a>
            </td>
        </tr>
}
}
                </tbody>

            </table>
            <div class="pagination-container">
                <p class="pagination-info">Page @Model.PageNumber of @Model.PageCount, showing @Model.TotalItemCount items</p>
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item"><a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" class="page-link">&laquo; Previous</a></li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">&laquo; Previous</span></li>
                    }

                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        if (i == Model.PageNumber)
                        {
                            <li class="page-item active"><span class="page-link">@i</span></li>
                        }
                        else
                        {
                            <li class="page-item"><a href="@Url.Action("Index", new { page = i })" class="page-link">@i</a></li>
                        }
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item"><a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" class="page-link">Next &raquo;</a></li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">Next &raquo;</span></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<div id="modal-header" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $('#modal-header').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var url = button.attr("href");
            var modal = $(this);
            // note that this will replace the content of modal-content ever time the modal is opened
            modal.find('.modal-content').load(url);
        });
    </script>

}


